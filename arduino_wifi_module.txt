#include <SoftwareSerial.h>
#include <WiFiEsp.h>
#include <Arduino.h>
#include <DHT.h>

#define DH0 A0
#define DHTType DHT11


SoftwareSerial espSerial(2, 3); // 소프트웨어 시리얼 객체 생성 (RX, TX)
DHT dhtA0(DH0, DHTType);

char ssid[] = "**********"; // Wi-Fi 네트워크 SSID
char password[] = "**********"; // Wi-Fi 네트워크 비밀번호
char server[] = "**********"; // 서버 주소
int port = 5000; // 서버의 포트 번호
float tempA0;
float humiA0;
String deviceNum; // 각 디바이스에 정의될 고유 번호
WiFiEspClient client;
unsigned long nextMil = millis();
bool blinkOn = false;
String a, b; // get 방식으로 정보를 받아 저장할 변수들
int i; // get 방식에서 정보를 추출하기 위해 index번호를 저장할 변수

void setup() {
  Serial.begin(9600); // 시리얼 통신 초기화
  espSerial.begin(9600); // ESP-01 모듈과 소프트웨어 시리얼 통신 초기화
  pinMode(8, OUTPUT);
  pinMode(10, OUTPUT);
  WiFi.init(&espSerial); // WiFiEsp 라이브러리 초기화
  dhtA0.begin();
  connectWiFi(); // wifi연결
  deviceNum = "03"; // 테이블의 이름을 만들때 사용 but, ip를 통해 생성이 불가능해서 임의의 번호로 대체.
  client.setTimeout(2000);
}

void loop() {
  if (!client.connected()) { // 다시 연결
    connectSendServer();
    humi_led(a.toInt());
    temp_led(b.toInt());
    connectServer();
  }
}

void connectWiFi() {
  WiFi.begin(ssid, password);
  Serial.println(WiFi.status());
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("Wi-Fi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void connectServer() {
  Serial.println("Connecting to server...");
  if (client.connect(server, port)) {
    Serial.println("Connected to server");
    String request = "GET /get_device_status?block_Num=" + deviceNum;
    request = request + " HTTP/1.1\r\n";
    //Serial.println(request);
    client.print(request);
    client.print("Host: ");
    client.print(server);
    client.print("\r\n\r\n");
    delay(200);
    Serial.println(client.available());
    while (client.available()) {
      String line = client.readStringUntil('\n');
      if((i = line.indexOf("humi")) != -1){
        a = line.substring(i+7, i+8);
        Serial.println(line);
      }
      if((i = line.indexOf("temp")) != -1){
        b = line.substring(i+7, i+8);
        break;
      }
    }
    humi_led(a.toInt());
    temp_led(b.toInt());

    client.stop();
    delay(1000);
  } else {
    Serial.println("Connection failed");
  }
}
void connectSendServer() {
  Serial.println("Connecting to server...");
  if (client.connect(server, port)) {
    Serial.println("Connected to server");
    // 여기에서 서버로 데이터를 보낼 수 있습니다.
    // 예를 들어, 변수를 보내려면 다음과 같이 작성할 수 있습니다.
    tempA0 = dhtA0.readTemperature();
    float aaa = floor(tempA0 * 1000) / 1000;
    tempA0 = aaa;
    humiA0 = dhtA0.readHumidity();
    float bbb = floor(humiA0 * 1000) / 1000;
    humiA0 = bbb;

    String temp_data = String(tempA0);
    String humi_data = String(humiA0);
    String data = "temp_data=" + temp_data + "&humi_data=" + humi_data + "&block_Num=" + deviceNum;
    //print
    Serial.println(data);
    client.print("POST /process_data HTTP/1.1\r\n");
    client.print("Host: ");
    client.print(server);
    client.print("\r\n");
    client.print("Content-Type: application/x-www-form-urlencoded\r\n");
    client.print("Content-Length: ");
    client.print(data.length());
    client.print("\r\n\r\n");
    client.print(data);
    client.println();
    client.stop();
    delay(1000);

  } else {
    Serial.println("Connection failed");
  }
}

void temp_led(int a){
  if(a == 0){
    digitalWrite(8, LOW);
  }else if(a == 2 || a == 3 || a == 1){
    digitalWrite(8, HIGH);
    int onMil = 500;
    int offMil = 500;
    run(onMil, offMil);
  }else{
    digitalWrite(8, HIGH); //발원지는 점멸하지 않는다.
  }
} // 03번 디바이스 기준.

/*
void temp_led(int a){
  if(a == 0){
    digitalWrite(8, LOW);
  }else if(a == 1 || a == 4 || a == 5){
    digitalWrite(8, HIGH);
    int onMil = 500;
    int offMil = 500;
    run(onMil, offMil);
  }else{
    digitalWrite(8, HIGH); //발원지는 점멸하지 않는다.
  }
} // 02번 디바이스 기준.
*/
/*
void temp_led(int a){
  if(a == 0){
    digitalWrite(8, LOW);
  }else if(a == 2 || a == 6 || a == 4){
    digitalWrite(8, HIGH);
    int onMil = 500;
    int offMil = 500;
    run(onMil, offMil);
  }else{
    digitalWrite(8, HIGH); //발원지는 점멸하지 않는다.
  }
} // 01번 디바이스 기준.
*/

void run(int onMil, int offMil){ // 블링크 false, 다음mills가 millis()로 된 것으로 접근하자 마자 true로 바뀜.
   if(blinkOn && millis() > nextMil){
      digitalWrite(8, LOW);
      blinkOn = false;
      nextMil = millis() + offMil;
    }
    else if (!blinkOn && millis() > nextMil){
      digitalWrite(8, HIGH);
      blinkOn = true;
      nextMil = millis() + onMil;
    }
}

void humi_led(int a){
  if(a == 1){
    digitalWrite(10, HIGH);
  }
  else {
    digitalWrite(10, LOW);
  }
}