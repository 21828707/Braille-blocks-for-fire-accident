#include <SoftwareSerial.h>
#include <WiFiEsp.h>
#include <Arduino.h>
#include <DHT.h> // 아두이노 온습도 센서를 사용하기 위한 라이브러리

#define DH0 A0
#define DHTType DHT11


SoftwareSerial espSerial(2, 3); // 소프트웨어 시리얼 객체(-> 마이크로컨트롤러와 컴퓨터 또는 다른 장치 간에 데이터 통신을 위해 사용되는 객체) 생성 (RX, TX)
DHT dhtA0(DH0, DHTType); // define정의 참고; 온습도 측정을 위한 객체 생성; dht+'이름'(입력 핀 번호, 센서 종류(DHT11))

char ssid[] = "..."; // Wi-Fi 네트워크 SSID
char password[] = "..."; // Wi-Fi 네트워크 비밀번호
char server[] = "..."; // PHP 서버 ip주소
int port = 5000; // PHP 서버 접속 포트 -> 아파치 이용.
float tempA0; // 온도값 저장 변수
float humiA0; // 습도값 저장 변수
String qwer; // 각 디바이스마다 개별 테이블을 제공하기 위해 테이블 이름으로 사용할 변수.
WiFiEspClient client;// 서버에 연결하여 데이터를 보내거나 받을 때 사용하는 객체

int count = 1;
unsigned long nextMil = millis();
bool blinkOn = false;
String a, b;
int i;

void setup() {
  Serial.begin(9600); // 시리얼 통신 초기화
  espSerial.begin(9600); // ESP-01 모듈과 소프트웨어 시리얼 통신 초기화
  pinMode(8, OUTPUT);
  pinMode(10, OUTPUT);
  WiFi.init(&espSerial); // WiFiEsp 라이브러리 초기화
  dhtA0.begin(); // DHT 센서 연결 시작
  connectWiFi(); // wifi연결
  client.setTimeout(2000); // 특정 시간 동안 작업이 완료되지 않을 경우 작업을 중단하고 에러를 처리하기 위해 사용(5초)
  IPAddress locala = WiFi.localIP();//ip주소가 배열의 형태로 저장 -> 그대로 사용하면 주소값 출력
  qwer = "임의의 숫자" // ex 01, 02, 03, ...
}

void loop() {
  if (!client.connected()) { // 다시 연결
    connectSendServer();
    humi_led(a.toInt());
    temp_led(b.toInt());
    Serial.println(count);
    connectServer();
    count = count + 1;
  }
}

void connectWiFi() {
  WiFi.begin(ssid, password); 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  } // wifi에 접속된 상태가 아니라면 연결이 완료될 때까지 대기한다.
  Serial.println("");
  Serial.println("Wi-Fi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP()); // 현재 장치의 ip주소를 출력(확인용)
}

void connectServer() {
  Serial.println("Connecting to server...");
  if (client.connect(server, port)) {
    Serial.println("Connected to server");
    String request = "GET /[php파일 이름].php?block_ip=" + qwer;
    request = request + " HTTP/1.1\r\n";
    client.print(request); // 예시) GET /[php파일 이름].php?block_ip=192.168.1.29 HTTP/1.1 입력.
    client.print("Host: ");
    client.print(server);
    client.print("\r\n\r\n");
    delay(200);
    Serial.println(client.available());
    while (client.available()) {
      String line = client.readStringUntil('\n');
      if((i = line.indexOf("humi")) != -1){
        a = line.substring(i+7, i+8);
        Serial.println(line);
      }
      if((i = line.indexOf("temp")) != -1){
        b = line.substring(i+7, i+8);
        break;
      }
    }
    humi_led(a.toInt());
    temp_led(b.toInt());

    client.stop();
    delay(1000);//딜레이를 주지 않으면 연결을 끝내는데 충분한 시간을 주지 못한다.
  } else {
    Serial.println("Connection failed");
  }
}
void connectSendServer() {
  Serial.println("Connecting to server...");
  if (client.connect(server, port)) {
    Serial.println("Connected to server");
    // 여기에서 서버로 데이터를 보낼 수 있습니다.
    // 예를 들어, 변수를 보내려면 다음과 같이 작성할 수 있습니다.
    tempA0 = dhtA0.readTemperature();
    float aaa = floor(tempA0 * 1000) / 1000;
    tempA0 = aaa;
    humiA0 = dhtA0.readHumidity();
    float bbb = floor(humiA0 * 1000) / 1000;
    humiA0 = bbb;
    String temp_data = String(tempA0);
    String humi_data = String(humiA0);
    String data = "temp_data=" + temp_data + "&humi_data=" + humi_data + "&block_ip=" + qwer;

    // 서버(PHP파일)로 데이터 보내기.
    client.print("POST /[php파일 이름].php HTTP/1.1\r\n");
    client.print("Host: ");
    client.print(server);
    client.print("\r\n");
    client.print("Content-Type: application/x-www-form-urlencoded\r\n");
    client.print("Content-Length: ");
    client.print(data.length());
    client.print("\r\n\r\n");
    client.print(data);
    client.println();
    client.stop();
    delay(1000);

  } else {
    Serial.println("Connection failed");
  }
}

/*
void temp_led(int a){
  if(a == 0){
    digitalWrite(8, LOW);
  }else if(a == 1 || a == 4 || a == 5){
    digitalWrite(8, HIGH);
    int onMil = 500;
    int offMil = 500;
    run(onMil, offMil);
  }else{
    digitalWrite(8, HIGH); //발원지는 점멸하지 않는다.
  }
} // 02번 디바이스 기준.
*/

void temp_led(int a){
  if(a == 0){
    digitalWrite(8, LOW);
  }else if(a == 2 || a == 6){
    digitalWrite(8, HIGH);
    int onMil = 500;
    int offMil = 500;
    run(onMil, offMil);
  }else if (a == 4){
    digitalWrite(8, HIGH);
    int onMill = 2000;
    int offMill = 1000;
    run(onMill, offMill);
  }else{
    digitalWrite(8, HIGH); //발원지는 점멸하지 않는다.
  }
} // 01번 디바이스 기준.


void run(int onMil, int offMil){ // 블링크 false, 다음mills가 millis()로 된 것으로 접근하자 마자 true로 바뀜.
   if(blinkOn && millis() > nextMil){
      digitalWrite(8, LOW);
      blinkOn = false;
      nextMil = millis() + offMil;
    }
    else if (!blinkOn && millis() > nextMil){
      digitalWrite(8, HIGH);
      blinkOn = true;
      nextMil = millis() + onMil;
    }
}

void humi_led(int a){
  if(a == 1){
    digitalWrite(10, HIGH);
  }
  else {
    digitalWrite(10, LOW);
  }
}